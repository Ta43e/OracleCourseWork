CREATE TABLE ROLES (
    ROLE_NAME NVARCHAR2(64) PRIMARY KEY
);

INSERT ALL
    INTO ROLES VALUES ('USER') -- PATIENT
    INTO ROLES VALUES ('ADMIN') -- ADMIN
    INTO ROLES VALUES ('AUTHOR') -- AUTHOR
SELECT 1 FROM DUAL;

CREATE TABLE USERS
(
    USER_ID    INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    USER_ROLE  NVARCHAR2(64) NOT NULL,
    USER_NAME  VARCHAR2(50)  NOT NULL,
    USER_LOGIN VARCHAR2(50)  NOT NULL UNIQUE,
    USER_PASS  VARCHAR2(100) NOT NULL,
    CONSTRAINT FK_USER_ROLE
        FOREIGN KEY (USER_ROLE)
            REFERENCES ROLES (ROLE_NAME)
);

CREATE TABLE PLAYLIST (
    PLAYLIST_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    PLAYLIST_NAME VARCHAR2(50) NOT NULL,
    PLAYLIST_COVER VARCHAR2(50) NOT NULL,
    USER_ID INT NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE
);

CREATE TABLE SONGS (
    SONG_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    GENRE_ID INT NOT NULL,
    SONG VARCHAR2(200) NOT NULL,
    SONG_COVER VARCHAR2(200) NOT NULL,


    LISTENING_COUNTER INT NOT NULL,
    AUTHOR_ID INT,
    CONSTRAINT FK_SONG_AUTHOR_USER
    FOREIGN KEY (AUTHOR_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE
);

CREATE TABLE SONG_USER (
    SONG_ID INT NOT NULL,
    USER_ID INT NOT NULL,

    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
    FOREIGN KEY (SONG_ID) REFERENCES SONGS(SONG_ID) ON DELETE CASCADE
);

CREATE TABLE PLAYLIST_SONG (
    PLAYLIST_ID INT NOT NULL,
    SONG_ID INT NOT NULL,
    FOREIGN KEY (SONG_ID) REFERENCES SONGS(SONG_ID) ON DELETE CASCADE,
    FOREIGN KEY (PLAYLIST_ID) REFERENCES PLAYLIST(PLAYLIST_ID) ON DELETE CASCADE
);

CREATE TABLE GENRES (
    GENRE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    GENRE_NAME VARCHAR2(50) NOT NULL
);

CREATE TABLE LISTENING_HISTORY (
    USER_ID INT NOT NULL,
    SONG_ID INT NOT NULL,
    AUDITION_DATE DATE NOT NULL, --время
    FOREIGN KEY (SONG_ID) REFERENCES SONGS(SONG_ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
);

CREATE TABLE ALBUMS (
    ALBUM_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ALBUM_COVER VARCHAR2(100) NOT NULL,
    RELEASE_DATE DATE NOT NULL, --дата создания альбома
    ALBUM_NAME VARCHAR2(50) NOT NULL
);

CREATE TABLE ALBUM_USER (
    ALBUM_ID INT NOT NULL,
    USER_ID INT NOT NULL,
    FOREIGN KEY (ALBUM_ID) REFERENCES ALBUMS(ALBUM_ID) ON DELETE CASCADE,
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE
) TABLESPACE ALEGRO_PDB;

CREATE TABLE ALBUM_SONG (
    ALBUM_ID INT NOT NULL,
    SONG_ID INT NOT NULL,
    FOREIGN KEY (SONG_ID) REFERENCES SONGS(SONG_ID) ON DELETE CASCADE,
    FOREIGN KEY (ALBUM_ID) REFERENCES ALBUMS(ALBUM_ID) ON DELETE CASCADE
);

